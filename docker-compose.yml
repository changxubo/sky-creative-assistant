services:
  nginx:
    image: nginx:alpine
    container_name: sky-creative-nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    restart: unless-stopped
    networks:
      - sky-creative-network
  ngrok:
    image: ngrok/ngrok:latest
    container_name: sky-creative-ngrok
    ports:
      - "4040:4040"
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
      - NGROK_DOMAIN=${NGROK_DOMAIN}
      - NGROK_REGION=us
    command: start --config /etc/ngrok/ngrok.yml --all
    volumes:
      - ./ngrok.yml:/etc/ngrok/ngrok.yml:ro
    restart: unless-stopped
    networks:
      - sky-creative-network
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: sky-creative-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./conf.yaml:/app/conf.yaml:ro
    restart: unless-stopped
    networks:
      - sky-creative-network

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=$NEXT_PUBLIC_API_URL
    container_name: sky-creative-frontend
    ports:
      - "3000:3000"
    env_file:
      - .env
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - sky-creative-network
  mongo:
    image: mongo:latest
    container_name: sky-creative-mongo
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped
    networks:
      - sky-creative-network

networks:
  sky-creative-network:
    driver: bridge

volumes:
  mongo_data:
