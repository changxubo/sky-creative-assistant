---
include:
  - '.gitlab/actions/build-image.yml'
  - '.gitlab/actions/build-cache.yml'
  - '.gitlab/actions/build-basedep.yml'
  - '.gitlab/actions/k8s-deploy.yml'
  - '.gitlab/actions/image-scan.yml'
  - '.gitlab/actions/sonar-scan.yml'
  - '.gitlab/actions/image-tag.yml'
  - '.gitlab/actions/trigger-webhook.yml'
  - '.gitlab/actions/k8s-restart.yml'
  - '.gitlab/actions/k8s-configmap.yml'
  - '.gitlab/actions/argo-workflow.yml'

workflow:
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
    - if: '$CI_COMMIT_BRANCH == "main"'
stages:
  - build_cache
  - sonar_scan
  - build_image
  - image_scan
  - image_tag
  - k8s_deploy
  - trigger_webhook

variables:
  DOCKER_REGISTRY: cnharbor.amway.com.cn
  DOCKER_PROJECT: lightai
  NAMESPACE: light-ai-lab
  FILE_ENV_CFG: ${FILE_ENV_CFG}

cache:
  key: ${CI_PROJECT_NAME}
  paths:
    - node_modules

build_cache:
  extends: .build_cache
  tags:
    - k8s-runner

sonar_scan:
  variables:
    SONAR_SCAN_ARGS: "-Dsonar.sources=./src/,./web/,./worker/,./xhs-mcp-server/ -Dsonar.tests= -Dsonar.exclusions=.env*,Dockerfile*,public/**"
  extends: .sonar_scan
  allow_failure: true
  tags:
    - k8s-runner

build_image_web:
  variables:
    IMAGE_NAME: creative-frontend
    DOCKER_FILE: "web/Dockerfile"
  extends: .build_image
  needs: ["build_cache", "sonar_scan"]
  tags:
    - k8s-runner

build_image:
  variables:
    IMAGE_NAME: creative-backend
    DOCKER_FILE: "Dockerfile"
  extends: .build_image
  needs: ["build_cache", "sonar_scan"]
  tags:
    - k8s-runner

image_tag_web:
  variables:
    IMAGE_NAME: creative-frontend
    APP_YAML: .gitlab/web.yaml
  extends: .image_tag
  needs: ["build_image_web"]
  tags:
    - k8s-runner

image_tag:
  variables:
    IMAGE_NAME: creative-backend
    APP_YAML: .gitlab/app.yaml
  extends: .image_tag
  needs: ["build_image"]
  tags:
    - k8s-runner

image_scan_web:
  variables:
    IMAGE_NAME: creative-frontend
    DOCKER_FILE: "web/Dockerfile"
  extends: .image_scan
  needs: ["build_image_web"]
  allow_failure: true
  tags:
    - k8s-runner

image_scan:
  variables:
    IMAGE_NAME: creative-backend
    DOCKER_FILE: "Dockerfile"
  extends: .image_scan
  needs: ["build_image"]
  allow_failure: true
  tags:
    - k8s-runner

k8s_deploy_web:
  variables:
    IMAGE_NAME: creative-frontend
    APP_YAML: .gitlab/web.yaml
    KUBE_CONFIG: "${KUBE_CONFIG_LIGHT_AI_QA}"
  extends: .k8s_deploy
  needs: ["image_scan_web","image_tag_web"]
  tags:
    - k8s-runner

k8s_deploy:
  variables:
    IMAGE_NAME: creative-backend
    APP_YAML: .gitlab/app.yaml
    KUBE_CONFIG: "${KUBE_CONFIG_LIGHT_AI_QA}"
  extends: .k8s_deploy
  needs: ["image_scan","image_tag"]
  tags:
    - k8s-runner

send_notification:
  variables:
    IMAGE_NAME: creative-backend,creative-frontend
    DOCKER_REGISTRY_GROUP: "lightai"
  extends: .trigger_webhook
  needs: ["k8s_deploy"] 
  tags:
    - k8s-runner



